@model thpt.ThachBan.DTO.Models.Employee
@using Microsoft.AspNetCore.Mvc.Rendering
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<style>
    .form-check:hover {
        background-color: yellowgreen;
    }
</style>
@*<div class="toast bg-white" role="alert" aria-live="assertive" aria-atomic="true" data-delay="2000" style="z-index:100;position: fixed; top: 1rem; right: 1rem;height: 100px">
    <div class="toast-header d-flex justify-content-between">
        <h4>Thông báo</h4>
    </div>
    <div class="toast-body;">
        Cập nhật thông tin thành công
    </div>
</div>*@
<div id="content-wrapper" class="content-main d-flex flex-column">

    <!-- Main Content -->
    <div id="content">
        <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 d-md-none static-top shadow">

            <!-- Sidebar Toggle (Topbar) -->
            <button id="sidebarToggleTop" class="btn btn-link rounded-circle mr-3">
                <i class="fa fa-bars"></i>
            </button>
        </nav>
        <div class="container-fluid">
            <hr />
            <h4 class="mb-4">Thông tin cá nhân</h4>
            <hr />
            <table class="table-borderless">
                <tbody>
                    <tr>
                        <td class="col-4 p-0">
                            Mã nhân viên
                        </td>
                        <td>
                            <input type="text" id="EmployeeId" value="@Model.EmployeeId" hidden>
                            <input type="text" disabled class="form-control" id="EmployeeCode" name="EmployeeCode" value="@Model.EmployeeCode" placeholder="Nhập mã nhân viên">
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Họ tên nhân viên
                        </td>
                        <td>
                            <input type="text" class="form-control" id="EmployeeName" name="EmployeeName" value="@Model.EmployeeName" placeholder="Nhập tên nhân viên">
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.Gender, "Gender", htmlAttributes: new { @class = "control-label" })
                        </td>
                        <td>
                            @Html.DropDownList("Gender", new SelectList(new Dictionary<int,string>(){ {0,"Nữ"}, {1,"Nam"}}, "Key", "Value", @Model.Gender), htmlAttributes: new { @class = "form-control" })

                        </td>
                    </tr>
                    <tr>
                        <td>
                            Ngày sinh

                        </td>
                        <td class="d-flex">
                            <input type="text" style="width: 50px;" class="form-control" id="DateOfBirthDate" name="DateOfBirthDate" value="@Model.DateOfBirth.ToString("dd")" placeholder="DD" /><span style="font-size: 28px">/</span>
                            <input type="text" style="width: 50px;" class="form-control" id="DateOfBirthMonth" name="DateOfBirthMonth" value="@Model.DateOfBirth.ToString("MM")" placeholder="MM"><span style="font-size: 28px">/</span>
                            <input type="text" style="width: 100px;" class="form-control" id="DateOfBirthYear" name="DateOfBirthYear" value="@Model.DateOfBirth.ToString("yyyy")" placeholder="YYYY">
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Nơi sinh
                        </td>
                        <td>
                            <input type="text" class="form-control" id="PlaceOfBirth" name="PlaceOfBirth" value="@Model.PlaceOfBirth" placeholder="Nhập nơi sinh">

                        </td>
                    </tr>
                    <tr>
                        <td>
                            Dân tộc
                        </td>
                        <td>
                            <input type="text" class="form-control" id="Nation" name="Nation" value="@Model.Nation" placeholder="Nhập dân tộc">
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Địa chỉ
                        </td>
                        <td>
                            <input type="text" class="form-control" id="Address" name="Address" value="@Model.Address" placeholder="Nhập quốc gia">
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Ngày bắt đầu làm việc
                        </td>
                        <td class="d-flex">
                            <input type="text" style="width: 50px;" class="form-control" id="WorkStartedDate" name="WorkStartedDate" value="@Model.WorkStarted.ToString("dd")" placeholder="DD" /><span style="font-size: 28px">/</span>
                            <input type="text" style="width: 50px;" class="form-control" id="WorkStartedMonth" name="WorkStartedMonth" value="@Model.WorkStarted.ToString("MM")" placeholder="MM"><span style="font-size: 28px">/</span>
                            <input type="text" style="width: 100px;" class="form-control" id="WorkStartedYear" name="WorkStartedYear" value="@Model.WorkStarted.ToString("yyyy")" placeholder="YYYY">
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Ngày kết thúc hợp đồng làm việc
                        </td>
                        <td class="d-flex">
                            <input type="text" style="width: 50px;" class="form-control" id="WorkEndedDate" name="WorkEndedDate" value="@Model.WorkEnded.ToString("dd")" placeholder="DD" /><span style="font-size: 28px">/</span>
                            <input type="text" style="width: 50px;" class="form-control" id="WorkEndedMonth" name="WorkEndedMonth" value="@Model.WorkEnded.ToString("MM")" placeholder="MM"><span style="font-size: 28px">/</span>
                            <input type="text" style="width: 100px;" class="form-control" id="WorkEndedYear" name="WorkEndedYear" value="@Model.WorkEnded.ToString("yyyy")" placeholder="YYYY">

                        </td>
                    </tr>
                    <tr>
                        <td>
                            Email
                        </td>
                        <td>
                            <input type="text" class="form-control" id="Email" name="Email" value="@Model.Email" placeholder="Nhập email">

                        </td>
                    </tr>
                    <tr>
                        <td>
                            Số điện thoại
                        </td>
                        <td>
                            <input type="text" class="form-control" id="PhoneNumber" name="PhoneNumber" value="@Html.DisplayFor(model => model.PhoneNumber)" placeholder="Nhập số điện thoại">


                        </td>
                    </tr>
                    <tr>
                        <td>
                            Trạng thái
                        </td>
                        <td>
                            @Html.DropDownList("Status", new SelectList(new Dictionary<int,string>(){ {1,"Đang làm việc"}, {0,"Dừng làm việc"}}, "Key", "Value", @Model.Status), htmlAttributes: new { @class = "form-control" })                 

                        </td>
                    </tr>
                    <tr>
                        <td>
                            Ngày tạo
                        </td>
                        <td>
                            @Model.CreatedDate.ToString("dd/MM/yyyy")
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Người tạo
                        </td>
                        <td>
                            @ViewBag.CreatedBy
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Ngày cập nhật
                        </td>
                        <td>
                            @Model.UpdatedDate?.ToString("dd/MM/yyyy")
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Người cập nhật
                        </td>
                        <td>
                            @ViewBag.UpdatedBy
                        </td>
                    </tr>
                </tbody>
            </table>
            <hr />
            <h4 class="mb-4">Thông tin công tác</h4>
            <hr />
            <table class="table table-bordered">
                <thead>
                    <tr>
                        Các lớp học chủ nhiệm
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>

                            <div class="dropdown">
                                <input id="ds_class" class="dropdown-toggle w-100 border-0 bg-white" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" />

                                <div style=" background-color: #2fb154;" class="dropdown-menu w-100" aria-labelledby="dropdownMenuButton">
                                    @{
                                        var classes = (List<thpt.ThachBan.DTO.Models.Class>)TempData["Classes"];
                                    }
                                    @for (int i = 0; i < classes.Count; i++)
                                    {
                                        <div class="form-check" style="padding-left: 36px;">
                                            <input style="margin-top: 8px;" class="form-check-input ds_class p-2" type="checkbox" id="@classes[i].ClassId" value="@classes[i].ClassName">
                                            <label style=" border-bottom:1px solid white;color: #ffffffcc;" class="form-check-label p-2 w-100" for="@classes[i].ClassId">@classes[i].ClassName</label>
                                        </div>
                                    }
                                </div>
                            </div>
                        </td>
                    </tr>

                </tbody>
            </table>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        Phòng ban trực thuộc
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <div class="dropdown">
                                <input id="ds_department" class="dropdown-toggle w-100 border-0 bg-white" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" />
                                <div style=" background-color: #2fb154;" class="dropdown-menu w-100" aria-labelledby="dropdownMenuButton">
                                    @{
                                        var departments = (List<thpt.ThachBan.DTO.Models.Department>)TempData["Departments"];
                                        List<string> ds_department = new List<string>();
                                        for (int i = 0; i < departments.Count; i++)
                                        {
                                            ds_department.Add(departments[i].DepartmentName);
                                        }
                                    }
                                    @for (int i = 0; i < departments.Count; i++)
                                    {
                                        <div class="form-check" style="padding-left: 36px;">
                                            <input style="margin-top: 8px;" class="form-check-input p-2 ds_department" type="checkbox" id="@departments[i].DepartmentId" value="@departments[i].DepartmentName">
                                            <label style=" border-bottom:1px solid white;color: #ffffffcc;" class="form-check-label p-2 w-100" for="@departments[i].DepartmentId">@departments[i].DepartmentName</label>

                                        </div>
                                    }
                                </div>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        Chuyên môn
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <div class="dropdown">
                                <input id="ds_subject" class="dropdown-toggle w-100 border-0 bg-white" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" />

                                <div style="height: 300px; overflow:scroll; background-color: #2fb154;" class="dropdown-menu w-100" aria-labelledby="dropdownMenuButton">
                                    @{
                                        var subjects = (List<thpt.ThachBan.DTO.Models.Subject>)TempData["Subjects"];
                                    }
                                    @for (int i = 0; i < subjects.Count; i++)
                                    {
                                        <div class="form-check" style="padding-left: 36px;">
                                            <input style="margin-top: 8px;" class="form-check-input p-2 ds_subject" type="checkbox" id="@subjects[i].SubjectId" value="@subjects[i].SubjectName">
                                            <label style=" border-bottom:1px solid white;color: #ffffffcc;" class="form-check-label p-2 w-100" for="@subjects[i].SubjectId">@subjects[i].SubjectName</label>
                                        </div>
                                    }
                                </div>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
            <hr />
            <div class="d-flex justify-content-center">
                <button class="btn btn-success" id="submitData">Lưu</button>
                <span style="width: 50px;"></span>
                <a href="/Admin/TeacherManager" class="btn btn-secondary" id="comeback">Quay lại </a>
            </div>
        </div>

    </div>
</div>
<script>

    $(document).ready(function () {
        var employeeId = $("#EmployeeId").val();
        var checkboxes2 = document.querySelectorAll('.ds_class');
        var listClass = [];
        var checkboxes1 = document.querySelectorAll('.ds_subject');
        var listSubject = [];
        var checkboxes = document.querySelectorAll('.ds_department');
        var listDepartment = [];

        async function getData() {
            try {
                const data3 = await
                    $.ajax({
                        type: 'GET',
                        data: { employeeId: employeeId },
                        url: '@Url.Action("loadClassSelected","TeacherManager")',
                        success: function (result) {
                            for (var i = 0; i < result.length; i++) {
                                listClass.push(result[i].name);
                                checkboxes2[result[i].stt].checked = true;
                                console.log(listClass)
                            }
                            document.querySelector('#ds_class').value = listClass.join(', ');
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                                console.log('Error creating employee: ' + textStatus);
                            }
                    })
                for (var i = 0; i < checkboxes2.length; i++) {
                    checkboxes2[i].addEventListener('change', function () {
                        var value = this.value;
                        // Nếu checkbox được chọn, thêm giá trị của nó vào mảng listDepartment
                        if (this.checked) {

                            listClass.push(value);
                            console.log(value)
                        }
                        // Nếu checkbox bị bỏ chọn, loại bỏ giá trị của nó khỏi mảng listDepartment
                        else {
                            var index = listClass.indexOf(value);
                            if (index !== -1) {
                                listClass.splice(index, 1);
                            }
                        }
                        
                        // Cập nhật giá trị của input xxx thành các giá trị được chọn
                        document.querySelector('#ds_class').value = listClass.join(', ');
                    });
                }
                const data1 = await
                    $.ajax({
                        type: 'GET',
                        data: { employeeId: employeeId },
                        url: '@Url.Action("loadSubjectSelected","TeacherManager")',
                        success: function (result) {
                            for (var i = 0; i < result.length; i++) {
                                listSubject.push(result[i].name);
                                checkboxes1[result[i].stt].checked = true;
                            }
                            document.querySelector('#ds_subject').value = listSubject.join(', ');
                        }
                    })
                for (var i = 0; i < checkboxes1.length; i++) {
                    checkboxes1[i].addEventListener('change', function () {
                        var value = this.value;
                        // Nếu checkbox được chọn, thêm giá trị của nó vào mảng listDepartment
                        if (this.checked) {
                            listSubject.push(value);
                        }
                        // Nếu checkbox bị bỏ chọn, loại bỏ giá trị của nó khỏi mảng listDepartment
                        else {
                            var index = listSubject.indexOf(value);
                            if (index !== -1) {
                                listSubject.splice(index, 1);
                            }
                        }

                        // Cập nhật giá trị của input xxx thành các giá trị được chọn
                        document.querySelector('#ds_subject').value = listSubject.join(', ');
                    });
                }

                const data2 = await $.ajax({
                    type: 'GET',
                    data: { employeeId: employeeId },
                    url: '@Url.Action("loadDepartmentSelected","TeacherManager")',
                    success: function (result) {
                        for (var i = 0; i < result.length; i++) {
                            listDepartment.push(result[i].name);
                            checkboxes[result[i].stt].checked = true;
                        }
                        document.querySelector('#ds_department').value = listDepartment.join(', ');
                    }
                });
                for (var i = 0; i < checkboxes.length; i++) {
                    checkboxes[i].addEventListener('change', function () {
                        var value = this.value;
                        // Nếu checkbox được chọn, thêm giá trị của nó vào mảng listDepartment
                        if (this.checked) {
                            listDepartment.push(value);
                        }
                        // Nếu checkbox bị bỏ chọn, loại bỏ giá trị của nó khỏi mảng listDepartment
                        else {
                            var index = listDepartment.indexOf(value);
                            if (index !== -1) {
                                listDepartment.splice(index, 1);
                            }
                        }

                        // Cập nhật giá trị của input xxx thành các giá trị được chọn
                        document.querySelector('#ds_department').value = listDepartment.join(', ');
                    });
                }

            } catch (error) {
                // Xử lý lỗi tại đây
                console.log(error);
            }
        }

        getData();

        $('#submitData').on("click", function () {
            var datapost={
                EmployeeId: $('#EmployeeId').val(),
                EmployeeCode: $('#EmployeeCode').val(),
                EmployeeName: $('#EmployeeName').val(),
                Gender: $('#Gender').val(),
                DateOfBirthDate: $('#DateOfBirthDate').val(),
                DateOfBirthMonth: $('#DateOfBirthMonth').val(),
                DateOfBirthYear: $('#DateOfBirthYear').val(),
                PlaceOfBirth: $('#PlaceOfBirth').val(),
                Nation: $('#Nation').val(),
                Status: $('#Status').val(),
                Address: $('#Address').val(),
                WorkStartedDate: $('#WorkStartedDate').val(),
                WorkStartedMonth: $('#WorkStartedMonth').val(),
                WorkStartedYear: $('#WorkStartedYear').val(),
                WorkEndedDate: $('#WorkEndedDate').val(),
                WorkEndedMonth: $('#WorkEndedMonth').val(),
                WorkEndedYear: $('#WorkEndedYear').val(),
                Email: $('#Email').val(),
                PhoneNumber: $('#PhoneNumber').val(),
                listClass: listClass,
                listSubject: listSubject,
                listDepartment: listDepartment
            };
            console.log(datapost);
            var EmployeeId = $('#EmployeeId').val();
            const data = $.ajax({
                url: '@Url.Action("EditTeacher","TeacherManager")',
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(datapost),
                    success: function(data) {
                    //var toast = document.querySelector(".toast");
                    //// Thêm lớp "show" để hiển thị thông báo
                    //toast.classList.add("show");
                    //setTimeout(removeToastClass, 5000);
                    if (data.status == 200){
                        alert("Cập nhật thông tin thành công!");
                    }
                    else if(data.status == 501){
                        alert("Nhhập dữ liệu sai định dạng: "+data.message);
                    }
                    },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log('Error creating employee: ' + textStatus );
                }
            });
        })

        function removeToastClass() {
            var toast = document.querySelector(".toast");
            toast.classList.remove("show");
        }
        function showUpdate() {
            // Lấy phần tử có class là "toast"

        };
    });


</script>

